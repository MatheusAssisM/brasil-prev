name: Code Quality & Tests

on:
  push:
    branches: [develop, main, master]
  pull_request:
    branches: [develop, main, master]

jobs:
  quality:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv sync
          uv pip install -e .

      - name: Run Black formatter check
        run: |
          uv run black --check app/ tests/

      - name: Run Flake8
        run: |
          uv run flake8 app/ tests/

      - name: Run Pylint
        run: |
          uv run pylint app/ --recursive=y

      - name: Run MyPy type checking
        run: |
          uv run mypy app/

      - name: Run unit tests with coverage
        run: |
          uv run pytest -m unit --cov=app --cov-report=term-missing --cov-report=xml --cov-report=html

      - name: Run integration tests
        run: |
          uv run pytest -m integration -v

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Archive coverage HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/
          retention-days: 30

      - name: Check coverage threshold
        run: |
          uv run pytest -m unit --cov=app --cov-fail-under=80

  summary:
    runs-on: ubuntu-latest
    needs: quality
    if: always()
    steps:
      - name: Check quality job status
        run: |
          if [ "${{ needs.quality.result }}" == "success" ]; then
            echo "✅ All quality checks passed!"
            exit 0
          else
            echo "❌ Quality checks failed!"
            exit 1
          fi
